{"ast":null,"code":"var _jsxFileName = \"/Users/jasminesmith/projects/repos/WS381219_WAD/src/pages/Browse-Courses.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BrowseCourses = () => {\n  _s();\n  const [courses, setCourses] = useState([]);\n  const [searchTerm, setSearchTerm] = useState('');\n  useEffect(() => {\n    // Fetch courses from an API or a static list\n    const fetchCourses = async () => {\n      // Replace with your API endpoint or data fetching logic\n      const response = await fetch('/api/courses');\n      const data = await response.json();\n      setCourses(data);\n    };\n    fetchCourses();\n  }, []);\n  const handleSearch = event => {\n    setSearchTerm(event.target.value);\n  };\n  const filteredCourses = courses.filter(course => course.title.toLowerCase().includes(searchTerm.toLowerCase()));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Browse Courses\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Search courses...\",\n      value: searchTerm,\n      onChange: handleSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: filteredCourses.map(course => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: course.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: course.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 25\n        }, this)]\n      }, course.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n_s(BrowseCourses, \"Ja3kPTjykUarhiNqA4AE3Fyo9ww=\");\n_c = BrowseCourses;\nexport default BrowseCourses;\nvar _c;\n$RefreshReg$(_c, \"BrowseCourses\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","BrowseCourses","_s","courses","setCourses","searchTerm","setSearchTerm","fetchCourses","response","fetch","data","json","handleSearch","event","target","value","filteredCourses","filter","course","title","toLowerCase","includes","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","map","description","id","_c","$RefreshReg$"],"sources":["/Users/jasminesmith/projects/repos/WS381219_WAD/src/pages/Browse-Courses.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst BrowseCourses = () => {\n    const [courses, setCourses] = useState([]);\n    const [searchTerm, setSearchTerm] = useState('');\n\n    useEffect(() => {\n        // Fetch courses from an API or a static list\n        const fetchCourses = async () => {\n            // Replace with your API endpoint or data fetching logic\n            const response = await fetch('/api/courses');\n            const data = await response.json();\n            setCourses(data);\n        };\n\n        fetchCourses();\n    }, []);\n\n    const handleSearch = (event) => {\n        setSearchTerm(event.target.value);\n    };\n\n    const filteredCourses = courses.filter(course =>\n        course.title.toLowerCase().includes(searchTerm.toLowerCase())\n    );\n\n    return (\n        <div>\n            <h1>Browse Courses</h1>\n            <input\n                type=\"text\"\n                placeholder=\"Search courses...\"\n                value={searchTerm}\n                onChange={handleSearch}\n            />\n            <ul>\n                {filteredCourses.map(course => (\n                    <li key={course.id}>\n                        <h2>{course.title}</h2>\n                        <p>{course.description}</p>\n                    </li>\n                ))}\n            </ul>\n        </div>\n    );\n};\n\nexport default BrowseCourses;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACQ,UAAU,EAAEC,aAAa,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAEhDC,SAAS,CAAC,MAAM;IACZ;IACA,MAAMS,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC7B;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,cAAc,CAAC;MAC5C,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAClCP,UAAU,CAACM,IAAI,CAAC;IACpB,CAAC;IAEDH,YAAY,CAAC,CAAC;EAClB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMK,YAAY,GAAIC,KAAK,IAAK;IAC5BP,aAAa,CAACO,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EACrC,CAAC;EAED,MAAMC,eAAe,GAAGb,OAAO,CAACc,MAAM,CAACC,MAAM,IACzCA,MAAM,CAACC,KAAK,CAACC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAAChB,UAAU,CAACe,WAAW,CAAC,CAAC,CAChE,CAAC;EAED,oBACIpB,OAAA;IAAAsB,QAAA,gBACItB,OAAA;MAAAsB,QAAA,EAAI;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACvB1B,OAAA;MACI2B,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,mBAAmB;MAC/Bb,KAAK,EAAEV,UAAW;MAClBwB,QAAQ,EAAEjB;IAAa;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B,CAAC,eACF1B,OAAA;MAAAsB,QAAA,EACKN,eAAe,CAACc,GAAG,CAACZ,MAAM,iBACvBlB,OAAA;QAAAsB,QAAA,gBACItB,OAAA;UAAAsB,QAAA,EAAKJ,MAAM,CAACC;QAAK;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACvB1B,OAAA;UAAAsB,QAAA,EAAIJ,MAAM,CAACa;QAAW;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA,GAFtBR,MAAM,CAACc,EAAE;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGd,CACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEd,CAAC;AAACxB,EAAA,CA3CID,aAAa;AAAAgC,EAAA,GAAbhC,aAAa;AA6CnB,eAAeA,aAAa;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}